###############################  Global Setting ################################################
# 产品主版本，一般默认不需要修改
mainVersion: 1.24.9

# 智算平台XPAI版本
xpaiVersion: 1.0.12

# 产品后缀,默认为空。此配置为OEM厂家配置，安装前需确定目标客户是否为OEM版本
# productSuffix: qcloud

# 安装扩展镜像包，包含XPAI平台内置的训练、推理框架镜像和平台tookit辅助镜像
# 由于扩展镜像包很大，约60GB，目标机器如果磁盘性能一般会导致安装时间很长
# 通常如果您的目标主机能够访问互联网，可以关闭扩展镜像包的安装，由平台第一次调度任务时从互联网上下载
# 如果您的环境是离线或者不能访问互联网，请务必打开扩展镜像包
xpaiExtension: false

# Kuberntes集群版本，默认离线环境下只支持v1.25.10
kubernetesVersion: v1.25.10

# 安装Helm的版本，默认离线环境下只支持3.12.0
# helmVersion: 3.12.0

# 安装Calico的版本，默认离线环境下只支持3.24.6
# calicoVersion: 3.24.6

# 安装OpenEBS的版本，默认离线环境下只支持3.9.0
# ebsVersion: 3.9.0

# SSH 配置，部署前请确保安装集群下所有的root账号均允许远程登录
# 在配置文件 /etc/ssh/sshd_config 中的 `PermitRootLogin yes` 设置

# SSH root账号的登录密码，xpaictl.sh将用这个密码远程登录主机进行安装,确保所有主机的root密码正确
#sshPassword: demo!@#admin
sshPassword: <target_ssh_paassword>

# SSH 登录端口，xpaictl.sh将使用$sshPort 端口远程登录主机进行安装,确保所有主机的ssh端口一样
#sshPort: 22
sshPort: <target_ssh_port>

############################### 默认数据和安装路径配置 ####################################

# XPAI集群所有节点默认的数据存放路径
#defaultDir: /data
defaultDir: <target_data_path>

# XPAI 数据缓存配置，默认关闭,设置成 true 打开数据缓存功能，需指定缓存硬盘
cache: false

# !!! 注意数据!!!
# cache 启用后，缓存硬盘设备在安装过程中会被格式化，请注意数据备份
# 当前仅支持一块硬盘设备，如果有多块硬盘可提前做好 raid 
#cacheDev: /dev/sdb
cacheDev: <target_device>
# TODO: 仅支持一次性挂载到/var/jfsCache目录，重启后失效，需持久化配置

############################### Host ######################################################

# 泛域名配置，默认是xpai.xiaoshi.cn:3000
# 平台运行后创建的资源访问地址如下：
# Dashboard： console.xpai.xiaoshiai.cn:30000
# 数据访问： in-<随机字符>.xpai.xiaoshiai.cn:30000
# 交互式建模: im-<随机字符>.xpai.xiaoshiai.cn:30000
# 推理服务： inf-<随机字符>.xpai.xiaoshiai.cn:30000

# 提示： 环境默认端口是30000，对应的是默认的`default-gateway`网关,要修改端口成80或433端口
# 第一步先将baseHost的端口删除正常部署，第二步在平台部署完成后手动将网关对应的网络设置成`hostNetwork`

baseHost: <your_domain_name>[:<target_port>]

# 关于域名的说明
# 1.如果您没有公网域名，也不需要自定义域名，可以选择直接使用 nip.io 提供的免费域名服务。
# nip.io 是一个免费的通配符 DNS 服务，它可以将动态分配的 IP 地址映射到一个固定的子域名上，特别适合用于本地开发环境。
# 您可以使用任何 IP 地址作为 nip.io 子域名的一部分，而 nip.io 会将它解析回相应的 IP 地址。

# 例如，如果你有一个内网 IP 地址 192.168.0.1，你可以使用 192.168.0.1.nip.io 作为域名
# 所有向这个域名发送的请求都会被解析到 192.168.0.1 这个 IP 地址上
# baseHost: 192.168.0.1.nip.io:30000

# 2.如果您有公网域名，只需要在域名服务商处添加一条该域名的 A 记录，地址解析到第一个Master节点的IP地址

# 例如，如果你有一个域名xiaoshiai.cn,可以配置一个泛域名 *.xpai.xiaoshiai.cn ,并将其解析到第一个Master节点的IP地址
# A记录的格式如下：
# 主机名：*.xpai.xiaoshiai.cn
# 记录类型：A
# 192.168.0.1
# baseHost: xpai.xiaoshiai.cn:30000


############################### Nvidia Driver Config #######################################
#
# 是否安装Nvidia驱动，默认关闭。如需打开需要在有互联网的情况下才能下载nvidia驱动的内核镜像
# 需要手动在服务器上安装Nvidia显卡驱动
installNvidiaDriver: false

# 是否启用GPU虚拟化，默认开启
enableVgpu: true

############################### Object Storage Config ######################################

# 是否安装Minio服务，内置Monio服务
installMinio: true

# 当 installMinio: true 时，可以选择Minio的部署模式，默认是standalone单节点模式，distributed是分布式模式
# standalone 仅用于单节点部署存储服务，用于演示和小规模场景
# distributed 用于小规模部署，没有专门的存储服务，又需要保证高可用的场景
minioArchitecture: standalone

# 当minioArchitecture=distributed时，可手动设置minio的实例数量，如果不设置，则自动根据部署时提交的节点数总和取最大偶数值
# 例如 ./xpaictl.sh --config xpai.yaml --masters 192.168.0.1,192.168.0.2 --nodes 192.168.0.5,192.168.0.3,192.168.0.4
# 默认的minioReplicas的模式值时 4
#./cpaictl.sh --config xpai.yaml --masters 192.168.0.1,192.168.0.2,192.168.0.3 --nodes 192.168.0.4,192.168.0.5,192.168.0.6
# 默认的minioReplicas的默认值是 6
# minioReplicas: 

# 外部对象存储配置，当installMinio: false 时，则需要引入外部对象存储服务
# 此模式适合各种规模下数据持久化场景
# s3Endpoint: 172.16.23.1:8080
# s3Bucket: xpai
# s3Capacity: 1000Gi
# s3Accesskey: xxxxxxxxxxxxxxx
# s3Secretkey: xxxxxxxxxxxxxxx